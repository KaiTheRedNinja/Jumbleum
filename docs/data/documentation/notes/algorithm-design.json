{
  "abstract" : [
    {
      "text" : "Set of step-by-step instructions for solving a problem (textbook definition)",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Notes\/documentation\/Home",
        "doc:\/\/Notes\/documentation\/Notes\/Computing"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Notes\/documentation\/Notes\/Algorithm-Design"
  },
  "kind" : "article",
  "metadata" : {
    "images" : [
      {
        "identifier" : "Checkmark.png",
        "type" : "icon"
      }
    ],
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Algorithm Design"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "It involves the development of a set of instructions or rules (example: Sequence to solve a Rubik’s cube)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Determining the purpose\/output via dry run",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Trace tables",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Error analysis",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Flowcharts",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Pseudocode",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Trace-Tables",
          "level" : 2,
          "text" : "Trace Tables",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "A dry run is a process of running through a set of steps manually.",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "A trace table is a tabulation of the change in variables as well as the output of an algorithm",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "when performing a dry run.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Uhh just practise some papers it’s really self explanatory when all the trace table questions are",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "literally the same. Generally, follow these rules:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Whenever a variable changes, write down the new value in the next row.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "If multiple variables change in the same step, write down all the new values in the same next",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "row.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Ensure that you are absolutely sure that comparisons are correct (eg. ",
                      "type" : "text"
                    },
                    {
                      "code" : "<",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " vs ",
                      "type" : "text"
                    },
                    {
                      "code" : "<=",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ")",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "To determine an algorithm’s purpose, look at the code (idk)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "anchor" : "Flowcharts",
          "level" : 2,
          "text" : "Flowcharts",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "This is a visual way of presenting an algorithm, and may be easier to understand than a long",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "series of steps. Each step is represented by a symbol, the order is shown using flow lines",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "(arrows)",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "There are 4 standard flowchart symbols.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Terminator",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Not to be confused with The Terminator, 1984",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Pill shaped. Or a rectangle with rounded corners. Someone paste images here please",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Either consists of the START or STOP command.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Self-explanatory",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Data",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Parallelogram-shaped.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "It’s the step where input data is received or output data is outputted.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Format: INPUT\/OUTPUT ",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Decision",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Diamond shaped.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "There should be 2 outgoing arrows representing possible outcomes, either YES or NO.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Normally used to compare values, use “==” for equality, “!=” for not equals, and those",
                              "type" : "text"
                            },
                            {
                              "text" : " ",
                              "type" : "text"
                            },
                            {
                              "text" : "greater than or less than for inequalities. You may use words for other things, such as “Is",
                              "type" : "text"
                            },
                            {
                              "text" : " ",
                              "type" : "text"
                            },
                            {
                              "text" : "time before 7 a.m.?”",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Format: Is ",
                              "type" : "text"
                            },
                            {
                              "text" : "?",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Process",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Rectangle shaped.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Represents a step involving an action or operation.",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    },
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Can either be changing the value of a variable or a more complex action, like",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        },
                        {
                          "items" : [
                            {
                              "content" : [
                                {
                                  "inlineContent" : [
                                    {
                                      "text" : "x = x + 1",
                                      "type" : "text"
                                    }
                                  ],
                                  "type" : "paragraph"
                                }
                              ]
                            },
                            {
                              "content" : [
                                {
                                  "inlineContent" : [
                                    {
                                      "text" : "Activate nuclear reactor",
                                      "type" : "text"
                                    }
                                  ],
                                  "type" : "paragraph"
                                }
                              ]
                            }
                          ],
                          "type" : "unorderedList"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Structuring-Flowcharts",
          "level" : 3,
          "text" : "Structuring Flowcharts",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "You should stick to these guidelines if you don’t want to get an F9:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Flowchart must start with only 1 terminator symbol",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Flowchart may stop with 1 or more terminator symbols",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Each flowchart symbol must have exactly 1 entry and exit point",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Exceptions include the terminator (only 1 entry\/exit point) and decision (two exit points,",
                              "type" : "text"
                            },
                            {
                              "text" : " ",
                              "type" : "text"
                            },
                            {
                              "text" : "labelled yes or no)",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Flow lines should not cross one another. No, they don’t care if you “indicate” which arrow is",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "which. Just learn to organise arrows correctly.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "Pseudocode",
          "level" : 2,
          "text" : "Pseudocode",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "It’s a description of an algorithm using natural language, mixed with sequence, selection and",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "iteration constructs. In other words, imagine the most generic possible form of a programming language.",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "There are a few commands and syntax to note:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Instead of ",
                      "type" : "text"
                    },
                    {
                      "code" : "=",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " to initialise a variable, use arrow, ",
                      "type" : "text"
                    },
                    {
                      "code" : "←",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : ", or ",
                      "type" : "text"
                    },
                    {
                      "code" : "SET",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Use ",
                      "type" : "text"
                    },
                    {
                      "code" : "≠",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " OR ",
                      "type" : "text"
                    },
                    {
                      "code" : "not(x == 5)",
                      "type" : "codeVoice"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "==",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " can be used to check for equality",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "INPUT",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " = Used to get an input for a variable. Variable need not be initialised beforehand (e.g: INPUT x)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "OUTPUT",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " = Produces a result from algorithm (e.g: OUTPUT “Hello”)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "IF…ELSEIF…ELSE…ENDIF",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " = If statement condition format. When using IF or ELSEIF, add THEN after the",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "condition (e.g: IF text == “” THEN)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "WHILE…ENDWHILE",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " = While loop format. No need to put anything after the while conditional",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "code" : "FOR…NEXT",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " = For loop format. After FOR should be a counter, e.g: FOR x = 1 to 5 (this is inclusive, it",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "goes from 1, 2, 3, 4, 5) rmb to end with ",
                      "type" : "text"
                    },
                    {
                      "code" : "NEXT x",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : " where x is the variable you used!",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "For any other additional functions you need, such as breaking a loop, continuing a loop, choosing a random",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "number, just write it in plain English (e.g: BREAK WHILE LOOP, PICK RANDOM INTEGER BETWEEN 1 AND 10 INCLUSIVE)",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "(caps lock not required)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "+, −, * or ×, ÷ can be used",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Use modulus; e.g. 5 modulo 2, NOT 5 % 2",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "⌊x⌋ and ⌈x⌉ are allowed for floor and ceiling division respectively because they are mathematical symbols",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "items" : [
                    {
                      "content" : [
                        {
                          "inlineContent" : [
                            {
                              "text" : "Else, you can use x = floor division of 5 by 2",
                              "type" : "text"
                            }
                          ],
                          "type" : "paragraph"
                        }
                      ]
                    }
                  ],
                  "type" : "unorderedList"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "To access array elements, use subscript syntax (e.g: ",
                      "type" : "text"
                    },
                    {
                      "code" : "array[1]",
                      "type" : "codeVoice"
                    },
                    {
                      "text" : "). Pseudocode is 0-indexed.",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "DO NOT use array slicing",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "Example algorithm that does nothing but demonstrates most of these commands:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "columns" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Python",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "code" : [
                    "number = int(input())",
                    "sum = 0",
                    "count = 0",
                    "while count < 5:",
                    "    if number % 2 == 0:",
                    "        sum += number",
                    "",
                    "    for i in range(3):",
                    "        print(sum)",
                    "",
                    "    number += 1",
                    "    count += 1",
                    "",
                    "print(\"Final sum:\")",
                    "print(sum)"
                  ],
                  "syntax" : "python",
                  "type" : "codeListing"
                }
              ],
              "size" : 1
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Pseudocode",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                },
                {
                  "code" : [
                    "INPUT number",
                    "SET sum to 0",
                    "SET count to 0",
                    "WHILE count < 5 DO",
                    "    IF number modulo 2 == 0 THEN",
                    "        sum = sum + number",
                    "    ENDIF",
                    "    FOR i FROM 0 TO 2",
                    "        OUTPUT sum",
                    "    NEXT i",
                    "    number = number + 1",
                    "    count = count + 1",
                    "ENDWHILE",
                    "PRINT \"Final sum:\"",
                    "PRINT sum"
                  ],
                  "syntax" : null,
                  "type" : "codeListing"
                }
              ],
              "size" : 1
            }
          ],
          "numberOfColumns" : 2,
          "type" : "row"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Abstraction-and-Algorithms",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Notes\/documentation\/Notes\/Program-Development",
        "doc:\/\/Notes\/documentation\/Notes\/Program-Testing"
      ],
      "title" : "Abstraction and Algorithms"
    }
  ]
, 
"references": {
"Checkmark.png": {
  "alt" : "Checkmark",
  "identifier" : "Checkmark.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/Notes\/Checkmark.png"
    }
  ]
},
"Subject_Computing.png": {
  "alt" : "Computing Icon",
  "identifier" : "Subject_Computing.png",
  "type" : "image",
  "variants" : [
    {
      "traits" : [
        "1x",
        "light"
      ],
      "url" : "\/images\/Notes\/Subject_Computing.png"
    }
  ]
},
"doc://Notes/documentation/Home": {
  "abstract" : [
    {
      "text" : "Notes. A lot of them. A jumble colosseum of notes. Jumbleum.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Home",
  "kind" : "article",
  "role" : "collection",
  "title" : "Jumbleum",
  "type" : "topic",
  "url" : "\/documentation\/home"
},
"doc://Notes/documentation/Notes/Computing": {
  "abstract" : [
    {
      "text" : "Basic computing technology and systems, concepts, algorithms, techniques and tools",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/Computing",
  "images" : [
    {
      "identifier" : "Subject_Computing.png",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Computing",
  "type" : "topic",
  "url" : "\/documentation\/notes\/computing"
},
"doc://Notes/documentation/Notes/Program-Development": {
  "abstract" : [
    {
      "text" : "The process of developing a program",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/Program-Development",
  "images" : [
    {
      "identifier" : "Checkmark.png",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "Program Development",
  "type" : "topic",
  "url" : "\/documentation\/notes\/program-development"
},
"doc://Notes/documentation/Notes/Program-Testing": {
  "abstract" : [
    {
      "text" : "Testing a program to ensure it does what is expected",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/Program-Testing",
  "images" : [
    {
      "identifier" : "Checkmark.png",
      "type" : "icon"
    }
  ],
  "kind" : "article",
  "role" : "article",
  "title" : "Program Testing",
  "type" : "topic",
  "url" : "\/documentation\/notes\/program-testing"
}
}
}