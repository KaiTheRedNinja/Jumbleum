{
  "abstract" : [
    {
      "text" : "When you don’t follow a language’s syntax rules and the compiler tells you “i dont know what this means”",
      "type" : "text"
    }
  ],
  "hierarchy" : {
    "paths" : [
      [
        "doc:\/\/Notes\/documentation\/Home",
        "doc:\/\/Notes\/documentation\/Notes\/NP",
        "doc:\/\/Notes\/documentation\/Notes\/Programming"
      ]
    ]
  },
  "identifier" : {
    "interfaceLanguage" : "swift",
    "url" : "doc:\/\/Notes\/documentation\/Notes\/1.2-Syntax-Errors"
  },
  "kind" : "article",
  "metadata" : {
    "role" : "article",
    "roleHeading" : "Article",
    "title" : "Syntax Errors"
  },
  "primaryContentSections" : [
    {
      "content" : [
        {
          "anchor" : "Overview",
          "level" : 2,
          "text" : "Overview",
          "type" : "heading"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Describe the operation of a compiler in reporting syntax errors",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Explain syntax error messages",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "Solve syntax errors",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "unorderedList"
        },
        {
          "anchor" : "The-Syntax-Error-Pipeline",
          "level" : 2,
          "text" : "The Syntax Error Pipeline",
          "type" : "heading"
        },
        {
          "inlineContent" : [
            {
              "text" : "Syntax is a set of rules you must follow when writing code. For example, in C, all lines must end with",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "code" : ";",
              "type" : "codeVoice"
            },
            {
              "text" : " (exceptions for functions and control flow like if\/while\/for).",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "When you break these syntax rules,",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "items" : [
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "The compiler will not be able to compile your code",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            },
            {
              "content" : [
                {
                  "inlineContent" : [
                    {
                      "text" : "The compiler will report an error, usually with a message, the line and column number (the error may",
                      "type" : "text"
                    },
                    {
                      "text" : " ",
                      "type" : "text"
                    },
                    {
                      "text" : "not actually be at that exact location)",
                      "type" : "text"
                    }
                  ],
                  "type" : "paragraph"
                }
              ]
            }
          ],
          "type" : "orderedList"
        },
        {
          "inlineContent" : [
            {
              "text" : "The C compiler compiles code from left-to-right, top-to-bottom. In this example:",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "code" : [
            "int main() {                    \/\/ line 0",
            "    printf(\"Hello, World!\")     \/\/ line 1",
            "    return 0;                   \/\/ line 2",
            "}                               \/\/ line 3"
          ],
          "syntax" : "c",
          "type" : "codeListing"
        },
        {
          "inlineContent" : [
            {
              "text" : "The compiler scans until the end of line 1, and ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "doesn’t",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : " find the terminating semicolon. It then",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "proceeds to scan line 2, but encounters ",
              "type" : "text"
            },
            {
              "code" : "return",
              "type" : "codeVoice"
            },
            {
              "text" : ". Because it expects a terminating semicolon before the",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "start of the next statement, it throws an error, citing line 2 as the location of the error. It will say",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "something like ",
              "type" : "text"
            },
            {
              "code" : "error: expected ';' before 'return'",
              "type" : "codeVoice"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        },
        {
          "inlineContent" : [
            {
              "text" : "Importantly, the error is actually caused by the missing semicolon on ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "line 1",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ", but the compiler only",
              "type" : "text"
            },
            {
              "text" : " ",
              "type" : "text"
            },
            {
              "text" : "detects it after it has scanned ",
              "type" : "text"
            },
            {
              "inlineContent" : [
                {
                  "text" : "line 2",
                  "type" : "text"
                }
              ],
              "type" : "emphasis"
            },
            {
              "text" : ".",
              "type" : "text"
            }
          ],
          "type" : "paragraph"
        }
      ],
      "kind" : "content"
    }
  ],
  "schemaVersion" : {
    "major" : 0,
    "minor" : 3,
    "patch" : 0
  },
  "sections" : [

  ],
  "seeAlsoSections" : [
    {
      "anchor" : "Chapter-1-Fundamentals-of-C",
      "generated" : true,
      "identifiers" : [
        "doc:\/\/Notes\/documentation\/Notes\/1.1-Fundamental-C"
      ],
      "title" : "Chapter 1: Fundamentals of C"
    }
  ]
, 
"references": {
"doc://Notes/documentation/Home": {
  "abstract" : [
    {
      "text" : "Notes. A lot of them. A jumble colosseum of notes. Jumbleum.",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Home",
  "kind" : "article",
  "role" : "collection",
  "title" : "Jumbleum",
  "type" : "topic",
  "url" : "\/documentation\/home"
},
"doc://Notes/documentation/Notes/1.1-Fundamental-C": {
  "abstract" : [
    {
      "text" : "Why is a programming language?",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/1.1-Fundamental-C",
  "kind" : "article",
  "role" : "article",
  "title" : "Fundamental C",
  "type" : "topic",
  "url" : "\/documentation\/notes\/1.1-fundamental-c"
},
"doc://Notes/documentation/Notes/NP": {
  "abstract" : [
    {
      "text" : "Polytechnic content for Ngee Ann Polytechnic: Engineering Science 2025-2028",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/NP",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "NP",
  "type" : "topic",
  "url" : "\/documentation\/notes\/np"
},
"doc://Notes/documentation/Notes/Programming": {
  "abstract" : [
    {
      "text" : "Programming, mostly in C",
      "type" : "text"
    }
  ],
  "identifier" : "doc:\/\/Notes\/documentation\/Notes\/Programming",
  "kind" : "article",
  "role" : "collectionGroup",
  "title" : "Programming",
  "type" : "topic",
  "url" : "\/documentation\/notes\/programming"
}
}
}